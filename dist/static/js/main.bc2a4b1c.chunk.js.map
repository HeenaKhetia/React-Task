{"version":3,"sources":["components/header/Header.js","components/footer/Footer.js","components/home/Home.js","components/content/Content.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","title","setInterval","window","location","href","includes","setState","Fragment","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","Component","Footer","footerItem","key","value","map","item","index","aria-hidden","src","Home","Content","content","error","params","match","axios","get","then","response","result","data","entries","filter","entry","catch","length","class","images","url","alt","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.bc2a4b1c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Header.scss'\n\nclass Header extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n             title: 'Titles'\n        }\n    }\n    \n    componentDidMount() {\n        setInterval(() => {\n            if ((this.state.title !== 'Movies') && (window.location.href.includes('movies'))) {\n                this.setState({\n                    title: 'Movies'\n                })\n            } else if ((this.state.title !== 'Series') && (window.location.href.includes('series'))) {\n                this.setState({\n                    title: 'Series'\n                })\n            } else if ((!window.location.href.includes('movies')) && (!window.location.href.includes('series'))) {\n                this.setState({\n                    title: 'Titles'\n                })\n            }\n        }, 10);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <nav className=\"navbar navbar-dark navbar-expand-lg bg-primary white-txt flex-container flex-space-between demo\">\n                \n                    <h4 className=\"bold-font\"><NavLink className=\"cardlink\" to=\"/\">DEMO Streaming</NavLink></h4>\n                \n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\n                        <a className=\"white-txt login\" href=\"#\">Login</a>\n                        <button className=\"btn btn-dark my-2 my-sm-0 login\" type=\"submit\">Start your free trial</button>\n                    </div>\n                </nav>\n                <nav className=\"navbar navbar-dark black-bg white-txt flex-container flex-space-between demo\">\n                    <h5 className=\"\">Popular {this.state.title}</h5>\n                </nav>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport './Footer.scss';\n\nclass Footer extends Component {\n\n    footerItem = [{ key: \"Home\", value: \"#\" }, { key: \"Terms and Conditions\", value: \"#\" }, { key: \"Privacy Policy\", value: \"#\" }, { key: \"Help\", value: \"#\" }, { key: \"Manage Account\", value: \"#\" }]\n    \n    render() {\n        return (\n            <React.Fragment>\n            <div className=\"footer desktop black-bg white-txt page-footer font-small\">\n                <div>\n                    {\n                        this.footerItem.map((item, index) =>\n                            <span><a href={item.value} className=\"white-txt footer-content\">{item.key} </a> {(item.key !== 'Manage Account') && <span> | </span>}</span>)\n                    }\n                </div>\n                <div className=\"copyright\">\n                    Copyright ©2016 DEMO Streaming All Rights Reserved.\n            </div>\n                <div className=\"flex-container flex-space-between social\">\n                    <div className=\"copyright justify-content-start\">\n                        <i className=\"fa fa-facebook fa-lg login\" aria-hidden=\"true\"></i>\n                        <i className=\"fa fa-twitter fa-lg login\" aria-hidden=\"true\"></i>\n                        <i className=\"fa fa-instagram fa-lg login\" aria-hidden=\"true\"></i>\n                    </div>\n                    <img className=\"img-width justify-content-end\" src=\"assets/store.png\" />\n                </div>\n            </div>\n\n            <div className=\"footer mobile black-bg white-txt page-footer font-small\">\n                <div>\n                    {\n                        this.footerItem.map((item, index) =>\n                            <div><a href={item.value} className=\"white-txt footer-content\">{item.key} </a></div>)\n                    }\n                </div>\n                <div className=\"copyright\">\n                    Copyright ©2016 DEMO Streaming All Rights Reserved.\n            </div>\n                <div className=\"flex-container flex-space-between social\">\n                    <div className=\"copyright justify-content-start\">\n                        <i className=\"fa fa-facebook login\" aria-hidden=\"true\"></i>\n                        <i className=\"fa fa-twitter login\" aria-hidden=\"true\"></i>\n                        <i className=\"fa fa-instagram login\" aria-hidden=\"true\"></i>\n                    </div>\n                    <img className=\"img-width justify-content-end\" src=\"assets/store.png\" />\n                </div>\n            </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Footer\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Home.scss'\n\nexport class Home extends Component {\n    render() {\n        return (\n            <div className=\"container flex-container\">\n                <div>\n                    <NavLink className=\"cardlink\" to=\"/movies\">\n                        <div className=\"moviecard\">\n                            <b className=\"white-txt\">MOVIES</b>\n                        </div>\n                        <span className=\"cardtitle\">Popular Movies</span>\n                    </NavLink>\n                </div>\n                <div>\n                    <NavLink  className=\"cardlink\" to=\"/series\">\n                        <div className=\"moviecard\">\n                            <b className=\" white-txt\">SERIES</b>\n                        </div>\n                        <span className=\"cardtitle\">Popular Series</span>\n                    </NavLink>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport './Content.scss'\n\nexport class Content extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            content: [],\n            error: false\n        }\n    }\n\n    componentDidMount() {\n        const params = this.props.match.params.content\n        axios.get('https://raw.githubusercontent.com/StreamCo/react-coding-challenge/master/feed/sample.json')\n            .then((response) => {\n                const result = response.data.entries;\n                this.setState({\n                    content: result.filter(entry => {\n                        if ((params === 'series') && (entry['programType'] === 'series') && (entry['releaseYear'] >= 2010)) {\n                            return entry;\n                        } else if ((params === 'movies') && (entry['programType'] === 'movie') && (entry['releaseYear'] >= 2010)) {\n                            return entry;\n                        } else if((params !== 'movies') && (params !== 'series')) {\n                            this.setState({\n                                error: true\n                            })\n                        }\n                    })\n                })\n            })\n            .catch((error) => {\n                this.setState({\n                    error: true\n                })\n            })\n    }\n    render() {\n        return (\n            <div className=\"container flex-container flex-space-around flex-wrap\">\n                {this.state.error ? \n                    <h6>Oops!!! Something Went Wrong...</h6> :\n                    (this.state.content.length === 0) ?\n                        <h6>Loading...</h6> :\n                        this.state.content.map((value,index) => {\n                            if(index < 21) {\n                            return <div class=\"card\">\n                            <img src={value.images[\"Poster Art\"].url}class=\"card-img-top\" alt=\"img\" />\n                            <div class=\"card-body\">\n                            <h6 class=\"card-title\">{value.title}</h6>\n                            </div>\n                        </div>\n                            }\n                        })\n                    }\n            </div>\n        )\n    }\n}\n\nexport default Content\n","import React from 'react';\nimport Header from './components/header/Header'\nimport Footer from './components/footer/Footer'\nimport Home from './components/home/Home'\nimport Content from './components/content/Content'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Header></Header>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/:content\" component={Content} />\n        </Switch>\n        <Footer></Footer>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}